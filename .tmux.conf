# increase escape response for tmux
set -s escape-time 0

# 番号基準値を変更
set -g base-index 1

## ヴィジュアルノーティフィケーションを有効にする
# ウインドウを切り替えるたびにステータスバー上にActivity in window *** という表示が出るのが煩わしいので、表示されないようにする。
setw -g monitor-activity off
set -g visual-activity off

# -----------------
# コンソール設定
# -----------------
# 後方スクロール行数の上限
set -g history-limit 100000

# -----------------
# プラグイン
# -----------------
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'

# --------------------
# tmux-cpu
# --------------------
# cpu-low
set -g @cpu_low_icon "=" # icon when cpu is low
set -g @cpu_low_fg_color "" # foreground color when cpu is low
set -g @cpu_low_bg_color "#[bg=colour26]" # background color when cpu is low

# cpu-medium
set -g @cpu_medium_icon "≡" # icon when cpu is medium
set -g @cpu_medium_fg_color "#[fg=red,bold]" # foreground color when cpu is medium
set -g @cpu_medium_bg_color "#[bg=colour54]" # background color when cpu is medium

# cpu-high
set -g @cpu_high_icon "≣" # icon when cpu is high
set -g @cpu_high_fg_color "[fg=red,bold]" # foreground color when cpu is high
set -g @cpu_high_bg_color "#[bg=colour196]" # background color when cpu is high

# cpu-percentage
set -g @cpu_percentage_format "%2.0f%%" # printf format to use to display percentage

# --------------------
# プレフィックスキー
# --------------------
# prefixキーをCtrl-tに設定。
# デフォルトのprefixキーであるCtrl-bは不使用とする
set -g prefix C-t
unbind C-b

# -----------------
# 色
# -----------------
# tmuxを256色/TrueColor表示できるようにする
set -ga terminal-overrides ",xterm-256color:Tc"
set -g default-terminal "screen-256color"

# ---------------------
# ステータスバーの構成
# ---------------------
setw -g automatic-rename on
# ステータスバーを1秒毎に描画し直す
set -g status-interval 1

#set -g status-style bg=black,fg=black
set -g status-bg colour56
set -g status-fg colour255
set -g status-position bottom
set -g status-justify left
set -g status-left-length  90
set -g status-right-length 90

# ステータスバー(左側)
set -g  status-left                  '#{?client_prefix,#[reverse],} SES:#(tmux_sessions)'
set -ga status-left                  '#{?client_prefix,#[reverse],}/ WIN: '

# ステータスバー(ウインドウ。これはstatus-leftの右隣)
setw -g window-status-format         '#{?client_prefix,#[reverse],}#[fg=colour255,bg=colour94][#I-#{window_panes}panes #W]#[default]'
setw -g window-status-current-format '#{?client_prefix,#[reverse],}#[fg=colour255,bg=colour33][#I-#{window_panes}panes #W]#[default]'

# ステータスバー(右側)
set -g  status-right                 '#{?client_prefix,#[reverse],}#[bg=colour0] %Y/%m/%d(%a)%H:%M:%S'
set -ga status-right                 '#{?client_prefix,#[reverse],} [#{cpu_bg_color}CPU#{cpu_icon}#{cpu_percentage}#[bg=colour0]'
set -ga status-right                 '#{?client_prefix,#[reverse],},#[bg=black]#(tmux_battery --tmux)'
set -ga status-right                 '#{?client_prefix,#[reverse],}#[bg=black],#(tmux_battery --remain)]'
set -ga status-right                 '#{?client_prefix,#[reverse],} #[bg=black]#(tmux_wifi)'
#set -ga status-right                 "|#h"

# ---------------------
# ペイン
# ---------------------
# Paneの色
#set -g pane-border-style        'fg=#999999 bg=#333333'
set -g pane-active-border-style 'fg=colour87,bg=colour57,bold'

set -g pane-border-status top
#set -g pane-border-format " WIN-PANE[#I-#P]#{?pane_active, #[reverse],}#{pane_current_command}#[default] "
set -g pane-border-format " WIN-PANE[#I-#P]#{?pane_active,#[bg=red],} #{pane_current_command} #[default]"

# ペイン移動 Prefix + 'h','j','k','l'
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind q display-panes
bind t display-panes
bind C-t select-pane -D

# ペイン移動その２ Prefix + 'CTRL-h','CTRL-j','CTRL-k','CTRL-l'でも行けるようにする。たぶんその方が指が楽。
bind -r C-h select-pane -L
bind -r C-j select-pane -D
bind -r C-k select-pane -U
bind -r C-l select-pane -R

# ペインの移動(ローテート)
bind -n C-left select-pane -L
bind -n C-down select-pane -D
bind -n C-up select-pane -U
bind -n C-right select-pane -R

# ペインリサイズ Prefix + 'H','J','K','L'
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# ペインの縦分割 Prefix + '|',または'\'
bind \| split-window -h
bind \\ split-window -h
bind C-\\ split-window -h

# ペインの横分割 Prefix + '-'
bind - split-window -v

bind = select-layout even-horizontal\; select-layout even-vertical

# ---------------------
# ウインドウ
# ---------------------
# 非アクティブウインドウの文字色と背景色
#set -g window-style        'fg=#999999 bg=#000000'

# アクティブウインドウの文字色と背景色
#set -g window-active-style 'fg=#ffffff bg=#002a30'
#set -g window-active-style 'fg=#ffffff bg=#171717'

# 前、次のウインドウを表示
bind C-n next-window
# 'bind -n' は、プレフィクスキー無しで動作するキーバインド
bind -n Home next-window
bind -n End previous-window

# ---------------------
# マウス
# ---------------------
## マウス操作を有効にする
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# コピーモードでvimキーバインドを使う

# ---------------------
# コピーモード
# ---------------------
# コピーモードへのモード変更 Prefix + '[': コピーモード開始
bind C-[ copy-mode

# コピーモードのときに、右上に出てくる表示の色
set -wg mode-style bg=red,fg=white

setw -g mode-keys vi

# 'v' で選択を始める
bind -T copy-mode-vi v send -X begin-selection

# 'V' で行選択
bind -T copy-mode-vi V send -X select-line

# 'C-v' で矩形選択
bind -T copy-mode-vi C-v send -X rectangle-toggle

# 'y' でヤンク
bind -T copy-mode-vi y send -X copy-selection

# 'Y' で行ヤンク
bind -T copy-mode-vi Y send -X copy-line

#  C-[(　コピーモード開始)と間違って暴発ペーストした事があったので、このbindは廃止。
# 'C-p'でペースト
# bind C-p paste-buffer
unbind C-p
unbind p

# run -b "~/dotfiles/tmux/tmux-cpu/cpu.tmux"

set -g display-panes-time 5000

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b "~/.cache/tmux/plugins/tpm/tpm"
