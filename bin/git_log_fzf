#!/bin/bash
# -------------------------------------------------------------
# git_log_fzf <commit1> <commit2>
# - commit1: required.
# - commit2: optional.
# -------------------------------------------------------------
range=${1}
file=${2}

_ME=$( [ -L $0 ] && basename $(readlink $0) || basename $0)
_FZF_PROMPT="${_ME} (range=[${range}],file=[$file]) > "
_FZF_HEADER=" (enter: git diff) (ctrl-p: PR) (ctrl-y: yank hash)"

GIT_LOG_CMD="git --no-pager log --graph --oneline --full-history --simplify-merges --decorate=full --abbrev-commit --color=always"\
" --date=format-local:'%Y/%m/%d %H:%M(%a)' --pretty=format:'	%an	%s	%h	%cd'"\
" ${range} -- ${file}"

GIT_LOG_ONE_CMD="git log -1 --oneline --decorate=full"\
" --date=format-local:'%Y/%m/%d %H:%M(%a)' --pretty=format:'%h	%cd	%an	%s	%d' --abbrev-commit --color=always {2}"

GIT_LOG_STAT="git log -1 --oneline --stat {2} --color=always| tail -n +2"
GIT_LOG_P_CMD="git log -1 --oneline -p {2} --color=always"
if ( type "diff-highlight" > /dev/null 2>&1 );then
  GIT_LOG_P_CMD="${GIT_LOG_P_CMD}| diff-highlight"
fi
GIT_LOG_P_CMD="${GIT_LOG_P_CMD}| tail -n +2"

eval "${GIT_LOG_CMD}" \
  | grep '*' \
  | awk -F '	' \
    '{ printf "\033[2m" }{ printf "%+2s", NR }                                       { printf "\033[0m" } # awk-NR is fzf-{1}: index no
     { printf "	" }{ printf "\033[38;5;223m" }                    { printf "%s", $4 }{ printf "\033[0m" } # awk-$4 is fzf-{2}: %h
     { printf "	" }{ printf "\033[38;5;184m" }{ printf "\033[2m" }{ printf "%s", $5 }{ printf "\033[0m" } # awk-$5 is fzf-{3}: %cd
     { printf "	" }                                               { printf "%s", $1 }                     # awk-$1 is fzf-{4}: commit graph
     { printf "	" }{ printf "\033[38;5;169m" }                    { printf "%s", $2 }{ printf "\033[0m" } # awk-$2 is fzf-{5}: %cd
     { printf "	" }{ printf "\033[38;5;223m" }                    { printf "%s", $3 }{ printf "\033[0m" } # awk-$3 is fzf-{6}: %s
     { printf  "\n" }' \
  | fzf --ansi --prompt="${_FZF_PROMPT}" --tabstop=1 --header="${_FZF_HEADER}" --no-sort --delimiter='\t' \
  --bind "enter:execute(git show -p {2}| nvim -R -c \"set ft=diff nomod nolist nospell nu\" > /dev/tty)" \
  --bind "ctrl-y:execute(echo -n {2}| pbcopy)" \
  --bind "ctrl-/:toggle-preview" \
  --bind "ctrl-p:execute:(git_pr_fzf {2})" \
  --preview="
      color() { printf '\e[38;5;%dm\e[48;5;%dm' 173 234; };
      reset_color() { printf '\e[0m'; };
      color; echo \"${GIT_LOG_ONE_CMD}\"; reset_color; eval \"${GIT_LOG_ONE_CMD}\"; echo;
      echo;

      color; echo \"${GIT_LOG_STAT}\"; reset_color; eval \"${GIT_LOG_STAT}\";
      eval printf '%.0s-' '{1..'$(tput cols)'}';
      echo;

      color; echo \"${GIT_LOG_P_CMD}\"; reset_color; eval \"${GIT_LOG_P_CMD}\";
    " --preview-window=bottom:85%

