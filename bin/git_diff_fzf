#!/usr/bin/env zsh

# -------------------------------------------------------------
# git_diff_fzf <commit1> <commit2>
# - commit1: required.
# - commit2: optional.
# -------------------------------------------------------------
commit1=$1
if [[ -z "$2" ]]; then
  commit2_three_dots="..."
else
  commit2_three_dots="...$2"
fi
commit2_two_dots="..${2:-HEAD}"

_harf_term_cols=$(( $(tput cols) / 2 ))
_ME=$( [ -L $0 ] && basename $(readlink $0) || basename $0)
_FZF_PROMPT="${_ME} \"$1\" \"$2\" > "

CR="
"

GIT_LOG="git log"\
" -1 "\
" --oneline "\
" --abbrev-commit"\
" --decorate=full"\
" --date=format-local:'%Y/%m/%d %H:%M:%S'"\
" --pretty=format:'%h	(%cd)	%an	%d	%s'"\
" ${commit1}${commit2_two_dots} -- {3}"
GIT_LOG=$(escape_SQ "${GIT_LOG}")

# GIT_DIFF_NO_COLOR="git diff --no-color ${commit1}${commit2_three_dots} -- {3}"
GIT_DIFF_NO_COLOR="git diff --no-color ${commit1} -- {3}"
GIT_DIFF_DELTA="git -c delta.side-by-side=true diff ${commit1}${commit2_three_dots} -- {3}"
GIT_DIFF_COLORED="git diff --color=always ${commit1}${commit2_three_dots} -- {3}"
( type "diff-highlight" > /dev/null 2>&1 ) && GIT_DIFF_COLORED="${GIT_DIFF_COLORED}| diff-highlight"

GIT_DIFF_NUMSTAT="git diff --diff-filter=ACMR --numstat ${commit1}${commit2_three_dots}"

files=$(eval "${GIT_DIFF_NUMSTAT}" \
  | awk -v deco="$(decorate)" '
  # --------------------------------------------------
  # Once make an associative array(deco_of).
  # --------------------------------------------------
  BEGIN {
    split(deco, deco_kv_ar, "/");
    for (i=0; i<length(deco_kv_ar); i++) {
      split(deco_kv_ar[i], kv, "=");
      deco_of[""kv[1]""]=kv[2]
    }
  }
  # --------------------------------------------------
  # Obtain file extension.
  # --------------------------------------------------
  {
    fn=$3;
    if (fn==NULL) { next };
    len=split(fn, parts, /[\.\/]/);
    ext="." parts[len];
  }
  # --------------------------------------------------
  # Stats + Filename for fzf.
  # --------------------------------------------------
  {
    printf "%2s", NR; printf "\033[0m";
    printf "	";
    printf "%s", deco_of["diff_plus"]; printf "%+4s", "+" $1; printf "\033[0m";
    printf "|";
    printf "%s", deco_of["diff_minus"]; printf "%-4s", $2 "-"; printf "\033[0m";
    printf "	";
    printf "%s", deco_of[ext]; printf "%s", $3; printf "\033[0m";
    printf "\n";
  }')

target=$(
  export GIT_MERGE_BASE=${commit1};\
  cd $(git_root);\
  diff_result=${GIT_DIFF_NO_COLOR};\
  echo "$files" | \
  fzf\
  --tabstop=1 \
  --ansi \
  --prompt="${_FZF_PROMPT}" \
  --header="${GIT_DIFF_NUMSTAT}${CR} (enter: nvim)  (tab: tig) (ctrl-d: git diff) (ctrl-l: git_log_fzf)   (ctrl-/: preview toggle)" \
  --nth=1,3 \
  --bind="ctrl-v:execute(nvim {3} >/dev/tty)" \
  --bind="tab:execute(tig ${commit1}${commit2_three_dots} -- {3} </dev/tty >/dev/tty)" \
  --bind="enter:execute(${GIT_DIFF_NO_COLOR}| tig >/dev/tty )" \
  --bind="ctrl-d:execute(${GIT_DIFF_NO_COLOR}| nvim >/dev/tty)" \
  --bind="ctrl-l:execute(git_log_fzf \"${commit1}${commit2_two_dots}\" \"{3}\")" \
  --bind='ctrl-/:toggle-preview' \
  --preview="
      # --------------------------------------------------
      # Stats + Filename.
      # --------------------------------------------------
      cd $(git_root);
      echo -n {1};
      echo -n '	';
      echo {2} \
        | awk -F '|' \
          -v deco_plus=$(escape_SQ $(decorate -diff_plus)) \
          -v deco_minus=$(escape_SQ $(decorate -diff_minus)) \
          '{
             printf \"%s\", deco_plus; printf \"%s\", \$1; printf \"\033[0m\";
             printf \"|\";
             printf \"%s\", deco_minus; printf \"%s\", \$2; printf \"\033[0m\";
          }';
      echo -n '	';
      echo {3};
      # echo;

      # --------------------------------------------------
      # Git log.
      # --------------------------------------------------
      decorate -verbose_log; echo "${GIT_LOG}"; printf '\e[0m';
      eval "${GIT_LOG}" \
        | awk -F '\t' \
          -v deco_git_hash=$(escape_SQ $(decorate -git_hash)) \
          -v deco_git_cd=$(escape_SQ $(decorate -git_cd)) \
          -v deco_git_an=$(escape_SQ $(decorate -git_an)) \
          -v deco_git_d=$(escape_SQ $(decorate -git_d)) \
          -v deco_git_s=$(escape_SQ $(decorate -git_s)) \
          '{
             printf \"%2s\", NR;
             printf \"	\"; printf \"%s\", deco_git_hash; printf \"%s\", \$1; printf \"\033[0m\"; # %h
             printf \"	\"; printf \"%s\", deco_git_cd; printf \"%s\", \$2; printf \"\033[0m\"; # (%cd)
             printf \"	\"; printf \"%s\", deco_git_an; printf \"%s\", \$3; printf \"\033[0m\"; # %an
             printf \"	\"; printf \"%s\", deco_git_d; printf \"%s\", \$4; printf \"\033[0m\"; # %d
             printf \"%s\", deco_git_s; printf \"%s\", \$5; printf \"\033[0m\"; # %s
             printf \"\n\";
          }'
      horizontal_line;
      echo;

      # --------------------------------------------------
      # Git diff.
      # --------------------------------------------------
      decorate -verbose_log '${GIT_DIFF_COLORED}';
      echo;
      eval '${GIT_DIFF_COLORED}';
    " --preview-window=bottom:75%,hidden)
    echo $target | awk '{print $3}'

