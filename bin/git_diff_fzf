#!/bin/bash

# -------------------------------------------------------------
# git_diff_fzf <commit1> <commit2>
# - commit1: required.
# - commit2: optional.
# -------------------------------------------------------------
commit1=$1
commit2=${2:-HEAD}

_harf_term_cols=$(( $(tput cols) / 2 ))
_ME=$( [ -L $0 ] && basename $(readlink $0) || basename $0)
_FZF_PROMPT="${_ME} (commit1=${commit1},commit2=${commit2}) > "

GIT_LOG="git log --oneline -99 --color=always --abbrev-commit --decorate=full"\
" --date=format-local:'%Y/%m/%d %H:%M:%S'"\
" --pretty=format:'%C($(git config --get color.diff.commit))%h%C(reset) %C(039 017)(%cd)%C(reset) %C(079)%an%C(reset) %C(226 021)%d%C(reset)%s'"\
" ${commit1}..${commit2} -- {3}"\
" | cat -n| sed -r 's/(^ +)([1-9][0-9]*)(\t+)(.*$)/\2 \4/'" # git logの結果に対し、cat -n の力で行番号を与え、sedの力で見た目を整える。

GIT_DIFF_STAT="git diff --color=always --stat=${_harf_term_cols} ${commit1}...${commit2} -- {3}"

GIT_DIFF_NO_COLOR="git diff --no-color ${commit1}...${commit2} -- {3}"
GIT_DIFF_COLORED="git diff --color=always ${commit1}...${commit2} -- {3}"
( type "diff-highlight" > /dev/null 2>&1 ) && GIT_DIFF_COLORED="${GIT_DIFF_COLORED}| diff-highlight"

GIT_DIFF_NUMSTAT="git diff --numstat ${commit1}...${commit2}"

files=$(eval "${GIT_DIFF_NUMSTAT}"| awk '{printf "%+5s" , "+" $1} {printf "%+5s" , "-" $2} {printf "%s\n", ", " $3} ')
target=$(echo "$files" | \
  fzf \
  --prompt="${_FZF_PROMPT}" \
  --header="(enter: nvim)  (tab: tig) (ctrl-d: git diff) (ctrl-l: git_log_fzf)   (ctrl-/: preview toggle)" \
  --nth=3 \
  --bind change:top \
  --bind "enter:execute(cd $(git_root) && env GIT_MERGE_BASE=${commit1} nvim {3} < /dev/tty > /dev/tty)" \
  --bind "tab:execute(cd $(git_root); env GIT_MERGE_BASE=${commit1} tig ${commit1}...${commit2} -- {3} < /dev/tty > /dev/tty)" \
  --bind "ctrl-d:execute(cd $(git_root); ${GIT_DIFF_NO_COLOR} < /dev/tty| nvim -R > /dev/tty)" \
  --bind "ctrl-l:execute(cd $(git_root); git_log_fzf \"${commit1}..${commit2}\" \"{3}\")" \
  --bind 'ctrl-/:toggle-preview' \
  --preview "
      color() { printf '\e[38;5;%dm\e[48;5;%dm' 173 234; };
      reset_color() { printf '\e[0m'; };
      cd $(git_root);

      color; echo '${GIT_DIFF_STAT}'; reset_color; eval '${GIT_DIFF_STAT}';
      eval printf '%.0s-' '{1..'$(tput cols)'}';
      echo;

      color; echo \"${GIT_LOG}\"; reset_color; eval \"${GIT_LOG}\";
      echo;
      eval printf '%.0s-' '{1..'$(tput cols)'}';
      echo;

      color; echo '${GIT_DIFF_COLORED}'; reset_color; eval '${GIT_DIFF_COLORED}';
    " --preview-window=right)
    echo $target | awk '{print $3}'

