#!/bin/bash
# do per 5 sec.
#[[ ! "$(( $(date +'%s') % 5 ))" -eq "0" ]] && exit 0
is_charging() { if type "pmset" &>/dev/null; then
    pmset -g ps | grep -E "Battery Power|charged" >/dev/null 2>&1
    [ $? -eq 0  ] && return 1 || return 0
  elif type "ioreg" &>/dev/null; then
    ioreg -c AppleSmartBattery | grep "IsCharging" | grep "Yes" >/dev/null 2>&1; return $?
  fi
  return 1
}

get_battery_percentage() {
  local current_bat percentage

  if type "pmset" &>/dev/null; then
    current_bat="$(pmset -g ps | grep -o '[0-9]\+%' | tr -d '%')"
  elif type "ioreg" &>/dev/null; then
    local _battery_info _max_cap _cur_cap
    _battery_info="$(ioreg -n AppleSmartBattery)"
    _max_cap="$(echo "$_battery_info" | awk '/MaxCapacity/{print $5}')"
    _cur_cap="$(echo "$_battery_info" | awk '/CurrentCapacity/{print $5}')"
    current_bat="$(awk -v cur="$_cur_cap" -v max="$_max_cap" 'BEGIN{ printf("%.2f\n", cur/max*100) }')"
  fi

  percentage="${current_bat%%.*}"
  [ -n "$percentage" ] && echo "$percentage%"
}

get_battery_remain() {
  local time_remain
  time_remain="no est"

  if type "pmset" &>/dev/null; then
    time_remain="$(pmset -g ps | grep -o '[0-9]\+:[0-9]\+')"
    [ -z "$time_remain" ] && time_remain="no est"
  elif type "ioreg" &>/dev/null; then
    local itte
    itte="$(ioreg -n AppleSmartBattery | awk '/InstantTimeToEmpty/{print $5}')"
    time_remain="$(awk -v remain="$itte" 'BEGIN{ printf("%dh%dm\n", remain/60, remain%60) }')"
    [ -z "$time_remain" ] || [ "${time_remain%%h*}" -gt 10 ] && time_remain="no est"
  fi

  echo "$time_remain"
  [ "$time_remain" = "no est" ] && return 1
}

get_str_tmux_battery() {
  local bat_percentage remain
  bat_percentage="$(get_battery_percentage)"
  bat_remain=$(get_battery_remain)

  local prefix="BAT"
  local mark="="
  local bold=""
  if is_charging; then
    [[ "$(expr $(date +'%S') % 2 )" -eq "0" ]] && mark=" " || mark="+"
    bold=",bold"
  fi

  local color_def
  [[ "${color_def}" == "" ]] && [[ "${bat_percentage%%%*}" -ge "80" ]] && color_def="fg=colour58,bg=colour249"
  [[ "${color_def}" == "" ]] && [[ "${bat_percentage%%%*}" -ge "60" ]] && color_def="bg=colour58"
  [[ "${color_def}" == "" ]] && [[ "${bat_percentage%%%*}" -ge "40" ]] && color_def="bg=colour96"
  [[ "${color_def}" == "" ]] && [[ "${bat_percentage%%%*}" -ge "20" ]] && color_def="bg=colour89"
  [[ "${color_def}" == "" ]]                                           && color_def="bg=colour160"
  # echo -e "#[${color_def}${bold}]${prefix}${mark}${bat_percentage}(${bat_remain})#[default]"

  if [[ "$(expr $(date +'%S') % 4 )" -lt 2 ]]; then
    # Q:why %7s?, A: because "BAT=96%".len => 7. (100%? will be decreased soooon.)
    printf "#[${color_def}${bold}]%7s#[default]" "${prefix}${mark}${bat_percentage}"
  else
    printf "#[${color_def}${bold}] %-6s#[default]" "${bat_remain}"
  fi
}

get_str_tmux_battery

