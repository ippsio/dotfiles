#!/bin/bash
# do per 5 sec.
#[[ ! "$(( $(date +'%s') % 5 ))" -eq "0" ]] && exit 0
is_charging() { if type "pmset" &>/dev/null; then
    pmset -g ps | grep -E "Battery Power|charged" >/dev/null 2>&1
    [ $? -eq 0  ] && return 1 || return 0
  elif type "ioreg" &>/dev/null; then
    ioreg -c AppleSmartBattery | grep "IsCharging" | grep "Yes" >/dev/null 2>&1; return $?
  fi
  return 1
}

get_battery_percentage() {
  local current_bat percentage

  if type "pmset" &>/dev/null; then
    current_bat="$(pmset -g ps | grep -o '[0-9]\+%' | tr -d '%')"
  elif type "ioreg" &>/dev/null; then
    local _battery_info _max_cap _cur_cap
    _battery_info="$(ioreg -n AppleSmartBattery)"
    _max_cap="$(echo "$_battery_info" | awk '/MaxCapacity/{print $5}')"
    _cur_cap="$(echo "$_battery_info" | awk '/CurrentCapacity/{print $5}')"
    current_bat="$(awk -v cur="$_cur_cap" -v max="$_max_cap" 'BEGIN{ printf("%.2f\n", cur/max*100) }')"
  fi

  percentage="${current_bat}"
  [ -n "$percentage" ] && echo "$percentage"
}

get_battery_remain() {
  local time_remain
  time_remain="..:.."

  if type "pmset" &>/dev/null; then
    time_remain="$(pmset -g ps | grep -o '[0-9]\+:[0-9]\+')"
    [ -z "$time_remain" ] && time_remain="..:.."
  elif type "ioreg" &>/dev/null; then
    local itte
    itte="$(ioreg -n AppleSmartBattery | awk '/InstantTimeToEmpty/{print $5}')"
    time_remain="$(awk -v remain="$itte" 'BEGIN{ printf("%dh%dm\n", remain/60, remain%60) }')"
    [ -z "$time_remain" ] || [ "${time_remain%%h*}" -gt 10 ] && time_remain="..:.."
  fi

  echo "$time_remain"
  [[ "$time_remain" == "..:.." ]] && return 1
}

get_str_tmux_battery() {
  local bat_percentage remain
  bat_percentage="$(get_battery_percentage)"
  bat_remain=$(get_battery_remain)

  local prefix="BAT"
  local mark=" "
  if is_charging; then
    [[ $(expr $(date +'%S') % 2) -eq 1 ]] && mark=" " || mark="+"
  fi

  if [[ ${bat_percentage} -ge 80 ]]; then
    printf "#[fg=colour58,bg=colour249]"
  elif [[ ${bat_percentage} -ge 60 ]] && [[ ${bat_percentage} -lt 80 ]]; then
    printf "#[bg=colour58]"
  elif [[ ${bat_percentage} -ge 40 ]] && [[ ${bat_percentage} -lt 60 ]]; then
    printf "#[bg=colour96]"
  elif [[ ${bat_percentage} -ge 20 ]] && [[ ${bat_percentage} -lt 40 ]]; then
    printf "#[bg=colour89]"
  elif [[ ${bat_percentage} -lt 20 ]]; then
    printf "#[bg=colour160]"
  fi

  printf "${prefix}${mark}${bat_percentage}%%"

  # 画面幅が一定以上ならバッテリーの残時間（または残充電時間）も表示
  if [[ $(~/dotfiles/bin/tmux/tmux_client_width) -gt 160 ]]; then
    printf "(${bat_remain})"
  fi
  printf "#[default]"
}

get_str_tmux_battery

