#!/bin/bash
if ! is_git_repository; then
  echo "Not a git repository. "
  exit 1
fi

_ME=$( [ -L $0 ] && basename $(readlink $0) || basename $0)

do_something() {
  hash=$1
  date=$2
  author=$3
  local_branch=$4
  remote_branch=$5
  subject=$6

  LF="
"
  _FZF_PROMPT2="next action > "
  _FZF_HEADER2="${LF}branch     : [${local_branch}]"
  _FZF_HEADER2+="${LF}commit date: [${date}]"
  _FZF_HEADER2+="${LF}comitter   : [${author}]"
  _FZF_HEADER2+="${LF}commit     : [${hash}]"
  _FZF_HEADER2+="${LF}           : [${subject}]"
  _FZF_HEADER2+="${LF}"

  nextaction_list=()
  nextaction_list+=("1, respond me        '${local_branch}'")
  nextaction_list+=("4, git log + fzf     '${local_branch}'")
  nextaction_list+=("5, show pull request '${hash}'")

  IS_1=$(for arg in "$@"; do [[ "${arg}" =~ "--respond_me_branch" ]] && echo "${arg}"; done;)
  #echo "IS_1=${IS_1}"

  if [[ ! -z "${IS_1}" ]]; then
    nextaction="1"
  else
    nextaction=$(for row in "${nextaction_list[@]}"; do echo "$row"; done \
      | fzf-tmux -p 75% --no-info --prompt="${_FZF_PROMPT2}" --header="${_FZF_HEADER2}"| awk -F ',' '{ print $1 }')
  fi

  if [[ "$nextaction" == "" ]]; then
    return 0

  elif [[ "$nextaction" == "1" ]]; then
    echo "${local_branch}"
    return 0

  elif [[ "$nextaction" == "4" ]]; then
    if (git branch -a --format="%(refname:short)"| grep -E "^${local_branch}+$"); then
      git_log_fzf ${local_branch}
    else
      git_log_fzf ${remote_branch}
    fi
    return 0

  elif [[ "$nextaction" == "5" ]]; then
    git_pr_fzf "${hash}"
    return 1
  fi
  return 0
}

QUERY=""
while true; do
  HASH="%(color:051)%(objectname:short)%(color:reset)"
  DATE="%(color:169)%(authordate:format:%Y-%m-%d %H:%M:%S(%a))%(color:reset)"
  BRANCH="%(color:051)%(refname:short)%(color:reset)"
  AUTHOR="%(color:33)%(authorname)%(color:reset)"
  SUBJECT="%(subject)"
  HELPER1="xxxxxxxxxx	xxxx-xx-xx xx:xx:xx	xxxxxx	--	現在の変更を取り消す。"
  HELPER2="xxxxxxxxxx	xxxx-xx-xx xx:xx:xx	xxxxxx	-- .	現在の変更を全て取り消す。"
  HELPER3="xxxxxxxxxx	xxxx-xx-xx xx:xx:xx	xxxxxx	-b	ブランチを作る。"
  CMD="git branch --color=always -a --format=\"${HASH}	${DATE}	${AUTHOR}	${BRANCH}	${SUBJECT}\""
  DEVEL_BRANCHS=$(eval "${CMD} --sort=upstream --list develop origin/develop")
  OTHER_BRANCHS=$(eval "${CMD} --sort=-authordate" | grep -Ev "\[(develop|origin/develop)\]")

  _FZF_PROMPT="$_ME > "
  _FZF_HEADER="ブランチを指定し 次の操作を選択して下さい。
  次に選択できる操作：respond hash／git log

"

  # {1} hash {2} date {3} author {4} branch {5} subject
  FZF_RES=$(printf '%s\n%s\n%s\n%s\n%s' "${DEVEL_BRANCHS}" "${HELPER1}" "${HELPER2}" "${HELPER3}" "${OTHER_BRANCHS}" \
    | fzf --print-query --ansi --query="${QUERY}" --prompt="${_FZF_PROMPT}" --header="${_FZF_HEADER}" \
       --no-sort --tabstop=2 --info=inline --delimiter "	" --nth 1..)

  QUERY="$(echo "$FZF_RES"| awk 'NR==1')"
  SELECTED=$(echo "$FZF_RES"| awk 'NR==2')

  #SELECTED=$(select_branch "$@")
  [[ "${SELECTED}" == "" ]] && exit 0

  _hash=$(echo -n "${SELECTED}"| awk -F '\t' '{ print $1 }')
  _date=$(echo -n "${SELECTED}"| awk -F '\t' '{ print $2 }')
  _author=$(echo -n "${SELECTED}"| awk -F '\t' '{ print $3 }')
  _branch=$(echo -n "${SELECTED}"| awk -F '\t' '{ print $4 }')
  _local_branch=$(echo -n "${SELECTED}"| awk -F '\t' '{ print $4 }'| sed -e 's#^origin/##')
  _remote_branch="origin/${_local_branch}"
  _subject=$(echo -n "${SELECTED}"| awk -F '\t' '{ print $5 }')

  [[ "${_hash}" == "xxxxxxxxxx" ]] && add=" --respond_me_branch "

  if (do_something "${_hash}" "${_date}" "${_author}" "${_local_branch}" "${_remote_branch}" "${_subject}" "$@" "$add"); then
    break
  fi
done

