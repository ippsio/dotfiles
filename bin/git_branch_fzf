#!/bin/bash
# -------------------------
# git_branch_fzf
# rich branch selector.
# -------------------------
( ! is_git_repository ) && echo "Not a git repository. " && exit 1
_ME=$( [ -L $0 ] && basename $(readlink $0) || basename $0)
difference() { (printf '%s\n' $@ | sort -u; printf '%s\n' ${2}) | sort | uniq -u; };

# L1) ローカルブランチ(developのみ)
L1_local_develop_ARGS=$(git branch --list develop| sed -r 's/[ \*]+//')
# L2) リモートブランチ(origin/developのみ)
L2_remote_develop_ARGS=$(git branch --remotes --list origin/develop| sed -r 's/[ \*]+//')
# L3) ローカルブランチ(develop以外の全て)
L3_local_without_develop_ARGS="$(git branch| sed -r 's/[ \*]+//')"
L3_local_without_develop_ARGS=$(difference "${L3_local_without_develop_ARGS}" "${L1_local_develop_ARGS}")
L3_local_without_develop_ARGS=$(difference "${L3_local_without_develop_ARGS}" "${L2_remote_develop_ARGS}")
L3_local_without_develop_ARGS=$(echo "${L3_local_without_develop_ARGS}"| awk '{ printf " " $1 }')
# L4) リモートブランチのうち、ローカルにない存在しないものから、ブランチ名の接頭辞'origin/' を除去しもの。
L4_local_not_checkedout_ARGS=$(git branch --remotes| grep -v 'HEAD ->'| sed -r 's/[ \*]+//'| sed -r 's#^origin/##')
L4_local_not_checkedout_ARGS=$(difference "${L4_local_not_checkedout_ARGS}" "${L1_local_develop_ARGS}")
L4_local_not_checkedout_ARGS=$(difference "${L4_local_not_checkedout_ARGS}" "${L3_local_without_develop_ARGS}")
L4_local_not_checkedout_ARGS=$(echo "${L4_local_not_checkedout_ARGS}"| sed -r 's#^#origin/#g'| awk '{ printf " " $1 }')
# L5) リモートブランチ(origin/develop以外の全て)
L5_remote_without_develop_ARGS=$(git branch --remotes| grep -v 'HEAD ->'| sed -r 's/[ \*]+//')
L5_remote_without_develop_ARGS=$(difference "${L5_remote_without_develop_ARGS}" "${L2_remote_develop_ARGS}")
L5_remote_without_develop_ARGS=$(echo "${L5_remote_without_develop_ARGS}"| awk '{ printf " " $1 }')

# 情報付きのgit branch
GIT_BRANCH_CMD="git branch --sort=-authordate --color=always --format='%(objectname:short)	%(authordate:format:%Y-%m-%d	%H:%M:%S(%a))	%(authorname)	%(refname:short)	%(subject)'"
L0_hyphen_hyphen="xxxxxxxxxx	xxxx-xx-xx	xx:xx:xx(XX)	xxxxxx	--	現在の変更を取り消す。"
L1_local_develop=$(eval "${GIT_BRANCH_CMD} --list ${L1_local_develop_ARGS}"| perl -pe 's/^[ ][ ]//')
L2_remote_develop=$(eval "${GIT_BRANCH_CMD} --remotes --list ${L2_remote_develop_ARGS}"| perl -pe 's/^[ ][ ]//')
L3_local_without_develop=$(eval "${GIT_BRANCH_CMD} --list ${L3_local_without_develop_ARGS}"| perl -pe 's/^[ ][ ]//')
L4_local_not_checkedout=$(eval "${GIT_BRANCH_CMD} --remotes --list ${L4_local_not_checkedout_ARGS}"| perl -pe 's/^[ ][ ]//'| perl -pe 's#	origin/(.*	)#	\1#')
L5_remote_without_develop=$(eval "${GIT_BRANCH_CMD} --remotes --list ${L5_remote_without_develop_ARGS}"| perl -pe 's/^[ ][ ]//')

echo "${L0_hyphen_hyphen}
${L1_local_develop}
${L2_remote_develop}
${L3_local_without_develop}
${L4_local_not_checkedout}
${L5_remote_without_develop}" | perl -pe 's/^[ ][ ]//' \
  | awk -F '	' '
    { printf "\033[2m" }{ printf "%+2s", NR }          # awk-NR is fzf-{1}: index no
    { printf "	" }{ printf "[m[38;5;223m" }{ printf "\033[2m" }{ printf $1 }{ printf "[m" } # awk-$1 is fzf-{2}: %(objectname:short)
    { printf "	" }{ printf "[m[38;5;184m" }{ printf "\033[2m" }{ printf $2 }{ printf "[m" } # awk-$2 is fzf-{3}: date part of %(authordate:format:%Y-%m-%d	%H:%M:%S(%a))
    { printf "	" }{ printf "[m[38;5;184m" }{ printf "\033[2m" }{ printf $3 }{ printf "[m" } # awk-$3 is fzf-{4}: time part of %(authordate:format:%Y-%m-%d	%H:%M:%S(%a))
    { printf "	" }{ printf "[m[38;5;169m" }                    { printf $4 }{ printf "[m" } # awk-$4 is fzf-{5}: %(authorname)
    { printf "	" }{ printf "[m[38;5;123m" }                    { printf $5 }{ printf "[m" } # awk-$5 is fzf-{6}: %(refname:short)
    { printf "	" }{ printf "[m[38;5;255m" }{ printf "\033[2m" }{ printf $6 }{ printf "[m" } # awk-$6 is fzf-{7}: %(subject)
    { print  "	" }{ printf "\033[0m"}' \
  | fzf --ansi --prompt="$_ME > " --no-sort --info=inline --tabstop=1 --delimiter="	" --nth=1,2,3,5,6 \
  | awk -F '	' '{ print $6 }'

