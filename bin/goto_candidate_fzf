#!/bin/bash
readonly FILE=~/.completion_candidates/goto
readonly COLOR="[38;5;170m"
readonly COLOR0="[0m"
readonly TAB="	"
readonly FIND_GIT_BRANCH_ON_ELSE_BLOCK=false

# 移動先フォルダの候補を作ります。
t1=$(epocms)
candidates=$(while read -r line; do
  # NOTE: lineの定義内容はこんな感じ
  # > 1行目:dotfiles #vim   ,cd,~/dotfiles/.config/nvim
  # > 2行目:dotfiles        ,cd,~/dotfiles
  # > 3行目:   (略)
  tags=$(echo "${line}"| awk -F ',' '{ print $1 }')
  cmd=$(echo "${line}"| awk -F ',' '{ print $2 }')
  path=$(echo "${line}"| awk -F ',' '{ print $3 }')
  idx=$(( ${idx:-0} + 1 ))
  if [[ "${path: -2}" != "/*" ]]; then
    path_home_as_home=$(echo "${path}"| sed "s#^~#${HOME}#"| sed -r 's#/{1,}#/#g')
    git_branch=$(cd $path_home_as_home; git branch --show-current 2>/dev/null)
    [[ -n "${git_branch}" ]] && git_branch="\tGIT[${git_branch}]"
    printf "${idx} ${COLOR}${tags//  / }${COLOR0}${TAB}${cmd} ${path}${git_branch}\n"
  else
    sub_idx=0
    path="${path::$((${#path} - 2 ))}"
    path_home_as_home=$(echo "${path}"| sed "s#^~#${HOME}#"| sed -r 's#/{1,}#/#g')
    for grandchild in $(cd "${path_home_as_home}" && find . -type d -mindepth 2 -maxdepth 2| sed "s#^\./##"); do
      sub_idx=$(( sub_idx + 1 ))
      if ${FIND_GIT_BRANCH_ON_ELSE_BLOCK}; then
        git_branch=$(cd "${path_home_as_home}/${grandchild}"; git branch --show-current 2>/dev/null)
        [[ -n "${git_branch}" ]] && git_branch="\tGIT[${git_branch}]"
        printf "%s-%02d ${COLOR}${tags// /} #${grandchild/\// #}${COLOR0}${TAB}${cmd} ${path}/${grandchild}${git_branch}\n" "${idx}" "${sub_idx}"
      else
        printf "%s-%02d ${COLOR}${tags// /} #${grandchild/\// #}${COLOR0}${TAB}${cmd} ${path}/${grandchild}\n" "${idx}" "${sub_idx}"
      fi
    done
  fi
done < ${FILE})
t2=$(epocms)

# 移動先を選択します。
select_result=$(echo "${candidates}"\
  | sed -E "s/${TAB}/,${TAB}/g" \
  | column -t -s "," \
  | fzf-tmux -p 90%,80% \
    --tabstop=1 \
    --info=inline \
    --prompt="$(basename $0) " \
    --header="source file='$(home_as_tilde ${FILE})' (took $(( t2 - t1 )) ms to generate candidates.)" \
    --ansi \
    --query="#"
)

# 選択した移動先を返します。
result=$(echo "${select_result}"| awk -F "${TAB}" '{ print $2 }')
if [[ ! -z "${result}" ]]; then
  echo "${result}"
fi
