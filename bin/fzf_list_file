#!/bin/bash
# ファイルの選択I/Fをする。
# プレビュー：ファイル内の内容。
HOME_AS_TILDE=$(home_as_tilde "${1:-./}")
HOME_AS_HOME=$(home_as_home "${1:-./}")

FZF_PROMPT="$(basename $0)"
FZF_HEADER="C-g:ripgrep, C-/:TogglePreview"


# find option
# -s Cause find to traverse the file hierarchies in lexicographical order, i.e., alphabetical order within each directory.
#    Note: ‘find -s’ and ‘find | sort’ may give diffent results.
#
# -E Interpret regular expressions followed by -regex and -iregex primaries as extended (modern) regular expressions
#    rather than basic regular expressions (BRE's).  The re_format(7) manual page fully describes both formats.
FIND_CMD="find -s -E ${HOME_AS_HOME}"\
" -not -regex '.*(/.git)'"\
" -not -regex '.*(/.git/.*)'"\
" -not -regex '.*(\.DS_Store)'"

SELECTED=$(eval ${FIND_CMD} \
  | sed "s#^${HOME}#~#" \
  | fzf \
    +m \
    --info=inline \
    --prompt="${FZF_PROMPT} (dir='${HOME_AS_TILDE}') > " \
    --header="${FZF_HEADER}" \
    --bind "ctrl-/:toggle-preview" \
    --bind "ctrl-g:execute(rg_fzf_vim . ${HOME_AS_HOME} < /dev/tty > /dev/tty)" \
    --preview='bat $(home_as_home {}) --color=always --style=numbers --line-range :100'\
)

if [[ -z "${SELECTED}" ]]; then
  echo -n "$1" && exit 1
else
  SELECTED=$(home_as_home "${SELECTED}")
  if [[ -d ${SELECTED} ]]; then
    # 選択されたのがディレクトリなら、末尾に/を付ける。
    SELECTED="${SELECTED}/"
  fi
  echo -n "${SELECTED}" && exit 0
fi

