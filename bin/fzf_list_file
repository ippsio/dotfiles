#!/bin/bash
if [[ "$1" == "" || "$1" == "./" ]]; then
  ARG="."
else
  ARG="$(echo $1| sed -r 's#/+#/#g'| home_as_home)"
  [[ ! -e "$(home_as_home ${ARG})" ]] && exit
  FZF_QUERY=$(home_as_tilde ${ARG})
fi
ARG_AS_REALPATH=$(cd "${ARG}" && pwd)

FZF_PROMPT="$(basename $0)"
FZF_HEADER="C-g:ripgrep, C-/:TogglePreview"
# FIND_CMD="rg --files --hidden --no-ignore --sortr=path ${ARG} 2>/dev/null"
FIND_CMD="rg --files --hidden --no-ignore ${ARG} 2>/dev/null"
FZF_RESULT=$(eval "${FIND_CMD}"| grep -v "^${ARG}$"| sed 's#//#/#'| sed 's#^./##' \
  | home_as_tilde\
  | fzf +m \
    --query="${FZF_QUERY} " \
    --header="${FZF_HEADER}" \
    --prompt="${FZF_PROMPT} (dir='$(home_as_tilde ${ARG_AS_REALPATH})') > " \
    --bind "ctrl-/:toggle-preview" \
    --bind "ctrl-_:toggle-preview" \
    --bind "ctrl-g:execute(rg_fzf_vim . ${HOME_AS_HOME} < /dev/tty > /dev/tty)" \
    --preview-window=right:60%:wrap \
    --preview='
      real_path_file="$(home_as_home {}| xargs realpath)"
      true_if_git_repo=$(cd $(dirname "${real_path_file}"); git rev-parse --is-inside-work-tree 2> /dev/null)

      if [[ "${true_if_git_repo}" == "true" ]]; then
        if ( is_binary "${real_path_file}" ); then
          home_as_tilde "${real_path_file}"
          echo "---"
          echo "<<<< BINARY FILE >>>>"
          exiftool -t "${real_path_file}"| cat -n
          echo "---"
          bat -A "${real_path_file}"
        else
          git_blame_colored "${real_path_file}"
        fi
      else
        if ( is_binary "${real_path_file}" ); then
          echo "<<<< BINARY FILE >>>>"
          exiftool -t "${real_path_file}"| cat -n
          echo "---"
          bat -A "${real_path_file}"
        else
          bat "$(home_as_home {})" --color=always --style=numbers --line-range :100
        fi
      fi
    ')
FZF_EXIT_CD=$?
[[ $FZF_EXIT_CD != 0 ]] && echo -n "$1" && exit

FZF_RESULT=$(home_as_tilde ${FZF_RESULT})
RETURN_RELATIVE_PATH=false

if ${RETURN_RELATIVE_PATH}; then
  RELATIVE_PATH="$(realpath --relative-to=. ${FZF_RESULT:-$(home_as_home ${ARG})})"
  if [[ -d ${RELATIVE_PATH} ]]; then
    RELATIVE_PATH="${RELATIVE_PATH}/"
  fi
  echo -n "${RELATIVE_PATH}"

else
  echo -n "${FZF_RESULT}"
fi

