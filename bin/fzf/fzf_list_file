#!/usr/bin/env bash
if [[ -z "$1" || "$1" == "." || "$1" == "./" ]]; then
  TARGET_DIR="."
  FZF_QUERY=""
else
  # 2連続以上のスラッシュが与えられた場合、単一のスラッシュにします。
  TARGET_DIR=$(echo "$1"| sed -r 's#/+#/#g')
  # パスが${HOME}のものなら~/を${HOME}の値に置換します。
  TARGET_DIR=$(echo "${TARGET_DIR}"| home_as_home)
  # 存在しないパスなら処理を終了します。
  [[ ! -e "$(home_as_home ${TARGET_DIR})" ]] && exit
  FZF_QUERY="${TARGET_DIR_TILDE}"
fi
FZF_PROMPT="$(basename $0) (dir='$(home_as_tilde ${TARGET_DIR})') > "
FZF_RESULT=$(rg --files --hidden --no-ignore "${TARGET_DIR}" 2>/dev/null| grep -v "^${TARGET_DIR}$"| sed 's#^./##'| home_as_tilde\
  | fzf +m --query="${FZF_QUERY} " --header="C-g:ripgrep, C-/:TogglePreview" --prompt="${FZF_PROMPT}" --info=inline\
    --bind "ctrl-/:toggle-preview" --bind "ctrl-_:toggle-preview" \
    --bind "ctrl-g:execute(rg_fzf_vim . ${TARGET_DIR} < /dev/tty > /dev/tty)" \
    --preview-window=right:60%:wrap --preview='
      file_realpath="$(home_as_home {}| xargs realpath)"
      if ( is_binary "${file_realpath}" ); then
        home_as_tilde "${file_realpath}"
        echo "<<<BINARY FILE>>>"
        (set -x; exiftool -t "${file_realpath}")| cat -n
        echo "---"
        (set -x; bat --show-all --nonprintable-notation caret "${file_realpath}")
      else
        true_if_git_repo=$(cd $(dirname "${file_realpath}"); git rev-parse --is-inside-work-tree 2> /dev/null)
        if [[ "${true_if_git_repo}" == "true" ]]; then
          (set -x; git_blame_colored "${file_realpath}")
        else
          (set -x; bat "$(home_as_home {})" --color=always --style=numbers --line-range :100)
        fi
      fi
    ')
if [[ $? -eq 0 ]]; then
  home_as_tilde "${FZF_RESULT}"
else
  printf "%s" "$1"
fi
