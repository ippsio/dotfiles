# 終了タグ等の自動補完
[[plugins]]
repo = 'tpope/vim-endwise'

# 文字をシングルクォートとか（）で囲む
[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'easymotion/vim-easymotion'
hook_add = '''
  let g:EasyMotion_do_mapping = 0
  map  f <Plug>(easymotion-bd-w)
  nmap f <Plug>(easymotion-overwin-w)
'''

[[plugins]]
repo = 'vim-scripts/taglist.vim'
hook_add = '''
  set tags+=.tags;~/
  "let g:Tlist_Auto_Open = 1
  "let g:Tlist_File_Fold_Auto_Close = 1
  let g:Tlist_Exit_OnlyWindow = 1
  "let g:Tlist_Show_One_File = 1
  let g:Tlist_Use_SingleClick = 1
  let g:Tlist_Highlight_Tag_On_BufEnter = 1
  let g:Tlist_Use_Right_Window = 1
  let g:Tlist_Exit_OnlyWindow = 1

  nnoremap <silent> <space>l :TlistToggle<CR>
'''

# statusline
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  if !has('gui_running')
    set t_Co=256
  endif

  set laststatus=2
  let g:lightline_colorscheme = 'PaperColor_dark'
  let g:lightline = {
    \ 'colorscheme': g:lightline_colorscheme,
    \ 'active': {'left': [['mode', 'paste'], ['readonly', 'filepath', 'modified', 'anzu']]},
    \ 'component_function': {'anzu': 'anzu#search_status', 'filepath': 'FPath'}}

  function! FPath()
    return expand("%:s")
  endfunction
'''

# インデントを可視化
[[plugins]]
repo = 'Yggdroot/indentLine'

# 無駄な空白をハイライト
[[plugins]]
repo = 'bronson/vim-trailing-whitespace'


[[plugins]]
repo = 'kana/vim-submode'
hook_add = '''
  " - submode#enter_with:
  "     Define a key mapping to enter the {submode} from {modes}.
  "     If {rhs} is given, it will be executed whenever entering the {submode} by {lhs}.
  "
  "  - 1: submode name
  "  - 2: mode (n:normal, i:insert, ni:normal & insert), ...
  "  - 3: map option (b:<buffer>, e:<expr>)
  "  - 4: {lhs} of map
  "  - 5: {rhs} of map
  "
  " - submode#map:
  "     Define a key mapping ({lhs} to {rhs}) in the {submode} in {modes}.
  "
  "  - 1: submode name
  "  - 2: mode (n:normal, i:insert, ni:normal & insert), ...
  "  - 3: map option (b:<buffer>, e:<expr>)
  "  - 4: {lhs} of map
  "  - 5: {rhs} of map

  " my window mode
  " ウインドウの幅変更
  call submode#enter_with('window_mode', 'n', '', '<C-w>'.'<', '<C-w>5'.'<')
  call submode#map(       'window_mode', 'n', '',         '<', '<C-w>5'.'<')
  call submode#enter_with('window_mode', 'n', '', '<C-w>'.'>', '<C-w>5'.'>')
  call submode#map(       'window_mode', 'n', '',         '>', '<C-w>5'.'>')

  " ウインドウの高さ変更
  call submode#enter_with('window_mode', 'n', '', '<C-w>'.'-', '<C-w>5'.'-')
  call submode#map(       'window_mode', 'n', '',         '-', '<C-w>5'.'-')
  call submode#enter_with('window_mode', 'n', '', '<C-w>'.'+', '<C-w>5'.'+')
  call submode#map(       'window_mode', 'n', '',         '+', '<C-w>5'.'+')

  " ウインドウの高さ統一
  call submode#enter_with('window_mode', 'n', '', '<C-w>'.'=', '<C-w>'.'=')
  call submode#map(       'window_mode', 'n', '',         '=', '<C-w>'.'=')
'''

[[plugins]]
repo = 'tyru/vim-altercmd'
hook_add = '''
  " alias
  call altercmd#load()
  " Denite
  AlterCommand dr :<C-u>Denite file_mru
  AlterCommand db :<C-u>Denite buffer
  AlterCommand dy :<C-u>Denite neoyank
  AlterCommand df :<C-u>Denite file/rec
  AlterCommand do :<C-u>Denite outline

  " NERDTree
  AlterCommand ntf NERDTreeFind
'''

