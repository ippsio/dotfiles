[[plugins]]
repo = 'davidhalter/jedi-vim'
on_ft = ['python']
#depens = ['lambdalisue/vim-pyenv']

[[plugins]]
repo = 'lambdalisue/vim-pyenv'
on_ft = ['python']

[[plugins]]
repo = 'plytophogy/vim-virtualenv'
on_ft = ['python']

[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = ['python']
hook_add = '''
  "let g:deoplete#sources#jedi#python_path = '/usr/local/bin/python3'
  set completeopt=menuone
  "set completeopt=menu,preview
  autocmd! User jedi-vim call s:jedivim_hook()

  function! s:jedivim_hook()
    let g:jedi#auto_initialization = 0
    let g:jedi#auto_vim_configuration = 0
    let g:jedi#popup_on_dot = 0
    let g:jedi#popup_select_first = 0
    let g:jedi#show_call_signatures = 0
    autocmd FileType python setlocal omnifunc=jedi#completions
  endfunction
'''


[[plugins]]
repo = 'tell-k/vim-autopep8'
hook_add = '''
  let g:autopep8_max_line_length=99
  let g:autopep8_disable_show_diff=1
  autocmd FileType python map <buffer> <F8> :call Autopep8()<CR>
'''
on_ft = ['python']

## Ctags generator for vim
#[[plugins]]
#repo = 'szw/vim-tags'
#hook_add = '''
#  let g:vim_tags_project_tags_command = "ctags --langmap=Python:.py --exclude=*.js --exclude=.git* -R . 2>/dev/null"
#  set tags+=.tags;~/
#
#  " tagsジャンプ時に複数候補ある場合、一覧表示
#  nnoremap <C-]> g<C-]>
#'''
#on_ft = ['python']

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
  " 成功時にバッファ、失敗時にQuickFixで表示
  " 結果表示のサイズ調整など
  let g:quickrun_config = {
      \ '_' : {
      "    \ 'runner' : 'vimproc',
      "    \ 'runner/vimproc/updatetime' : 40,
          \ 'outputter' : 'error',
          \ 'outputter/error/success' : 'buffer',
          \ 'outputter/error/error'   : 'quickfix',
          \ 'outputter/buffer/split' : ':botright 8sp',
      \ }
  \}

  " 実行時に前回の表示内容をクローズ&保存してから実行
  let g:quickrun_no_default_key_mappings = 1
  nmap <Leader>r :cclose<CR>:write<CR>:QuickRun -mode n<CR>
'''
