# statusline
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  if !has('gui_running')
    set t_Co=256
  endif

  set laststatus=2
  let g:lightline_colorscheme = 'Tomorrow_Night_Bright'
  let g:lightline = {
    \  'colorscheme': g:lightline_colorscheme,
    \  'inactive': {
    \    'left': [ ['mode', 'paste'], ['readonly', 'filepath'], ['timeinfo'] ],
    \    'right': [ [ 'lineinfo' ]]
    \  },
    \  'active': {
    \    'left': [ ['mode', 'paste'], ['readonly', 'filepath'], ['timeinfo'] ],
    \    'right': [ [ 'lineinfo' ], ['info'], ['str_under_sursor'] ]
    \  },
    \  'mode_map': {
    \    'n': 'N',
    \    'i': 'I',
    \    'R': 'R',
    \    'v': 'V',
    \    'V': 'V',
    \    "\<C-v>": 'V',
    \    'c': 'C',
    \    's': 'S',
    \    'S': 'S',
    \    "\<C-s>": 'S',
    \    't': 'TERMINAL'
    \  },
    \  'component': { 'lineinfo': '%l/%L(%p%%):%v%<', 'info': '0x%B|' . &fileformat . '|' . &fileencoding . '%<'},
    \  'component_function': { 'filepath': 'FileName', 'str_under_sursor': 'StrUnderCursor'}
    \ }

  function! FileName()
    return substitute(expand("%:p"), $HOME, "~", "g") . ( &modified ? '|+' : '')
  endfunction

  function! StrUnderCursor()
    return matchstr(getline('.'), '.', col('.')-1)
  endfunction
'''

