[[plugins]]
repo = 'Shougo/echodoc.vim'
hook_add='''
  set cmdheight=2
  " Option 4:
  " Or, you could use neovim's floating text feature.
  "
  let g:echodoc#enable_at_startup = 1
  let g:echodoc#type = 'floating'
  " To use a custom highlight for the float window,
  " change Pmenu to your highlight group
  highlight link EchoDocFloat Constant

  " Option 5:
  " Or, you could use vim's popup window feature.
  let g:echodoc#enable_at_startup = 1
  let g:echodoc#type = 'popup'
  " To use a custom highlight for the popup window,
  " change Pmenu to your highlight group
  highlight link EchoDocPopup Pmenu
'''

[[plugins]]
repo = 'Shougo/neosnippet.vim'
hook_add = '''
"imap <C-k>     <Plug>(neosnippet_expand_or_jump)
smap <C-k>     <Plug>(neosnippet_expand_or_jump)
xmap <C-k>     <Plug>(neosnippet_expand_target)
imap <expr><TAB> neosnippet#expandable_or_jumpable() ?
      \ "\<Plug>(neosnippet_expand_or_jump)"
      \: pumvisible() ? "\<C-n>" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
      \ "\<Plug>(neosnippet_expand_or_jump)"
      \: "\<TAB>"
if has('conceal')
  set conceallevel=2 concealcursor=i
endif
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
hook_add ='''
lua <<EOF
require'nvim-treesitter.configs'.setup {
  highlight = {
    enable = true,
    disable = { }
  }
}
EOF
'''

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo='thinca/vim-quickrun'
hook_add = '''
  nnoremap <f5> :QuickRun<CR>
  vnoremap <f5> :QuickRun<CR>
  nnoremap <expr><silent> <C-c> quickrun#is_running() ? quickrun#sweep_sessions() : "<C-c>"

  let g:quickrun_config = {
  \ "_" : {
  \  "runner" : "vimproc",
  \  "runner/vimproc/updatetime" : 60,
  \  "outputter/buffer/split" : "botright 8sp",
  \  "outputter/buffer/close_on_empty" : 1
  \  },
  \ }


  " let g:quickrun_config = {
  " \ "_" : {
  " \  "runner" : "vimproc",
  " \  "runner/vimproc/updatetime" : 60,
  " \  "outputter" : 'error',
  " \  "outputter/error/success" : 'buffer',
  " \  "outputter/error/error"   : 'quickfix',
  " \  "outputter/buffer/split" : "botright 8sp",
  " \  "outputter/buffer/close_on_empty" : 1
  " \  },
  " \ }
'''


# 対応する括弧をいいかんじにする
[[plugins]]
repo='itchyny/vim-parenmatch'
hook_add='''
let g:loaded_matchparen = 1
'''

# カーソル下の単語に下線を引いたり、背景色を変えたりする。
[[plugins]]
repo='itchyny/vim-cursorword'
hook_add='''
hi CursorWord0 ctermbg=58
hi CursorWord1 ctermbg=58
'''

[[plugins]]
repo = 'rhysd/accelerated-jk'
on_map = {n = '<Plug>'}
hook_add = '''
  let g:accelerated_jk_acceleration_table = [7,12,17,21,24,26,28,30]
  nmap <silent>j <Plug>(accelerated_jk_gj)
  nmap <silent>k <Plug>(accelerated_jk_gk)
'''
[[plugins]]
repo='jreybert/vimagit'

