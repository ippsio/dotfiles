[[plugins]]
repo = 'lambdalisue/vim-pyenv'
on_ft = ['python']

[[plugins]]
repo = 'plytophogy/vim-virtualenv'
on_ft = ['python']

[[plugins]]
repo = 'davidhalter/jedi-vim'
on_ft = ['python']
hook_add = '''
  " 自動で初期化
  let g:jedi#auto_initialization = 1

  " 定義移動などをTabで
  let g:jedi#use_tabs_not_buffers = 0

  " 候補の1番目を選択
  let g:jedi#popup_select_first = 1

  " ピリオドを入力したら補完
  let g:jedi#popup_on_dot = 0

  " 関数の引数表示を有効化(0: 非表示, 1:表示, 2:コマンドラインに表示)
  let g:jedi#show_call_signatures = 2

  " compleoptの設定
  "let g:jedi#auto_vim_configuration = 0

  " AssignmentまたはDefinitionに移動
  let g:jedi#goto_command = "<leader>d"

  " Assignmentに移動
  let g:jedi#goto_assignments_command = "<leader>g"

  " #goto_definitions_commandは非推奨。#goto_commandを使用
  " let g:jedi#goto_definitions_command = ""

  " pydoc表示
  let g:jedi#documentation_command = "K"

  " 使用箇所を表示
  let g:jedi#usages_command = "<leader>n"

  " リネーム
  " #quick-runと競合しないように大文字Rに変更. READMEだと<leader>r
  let g:jedi#rename_command = "<leader>R"

  " ポップアップを表示しない
  autocmd FileType python setlocal completeopt-=preview
'''

[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = ['python']
hook_add = '''
  "let g:deoplete#sources#jedi#python_path = '/usr/local/bin/python3'
  set completeopt=menuone
  "set completeopt=menu,preview
  autocmd! User jedi-vim call s:jedivim_hook()

  function! s:jedivim_hook()
    "let g:jedi#auto_initialization = 0
    "let g:jedi#auto_vim_configuration = 0
    "let g:jedi#popup_on_dot = 0
    "let g:jedi#popup_select_first = 0
    "let g:jedi#show_call_signatures = 0


    let g:jedi#popup_select_first = 1
    autocmd FileType python setlocal omnifunc=jedi#completions
  endfunction
'''

[[plugins]]
repo = 'tell-k/vim-autopep8'
hook_add = '''
  let g:autopep8_max_line_length=99
  let g:autopep8_disable_show_diff=1
  autocmd FileType python map <buffer> <F8> :call Autopep8()<CR>
  set expandtab
  "set tabstop=4
  "set shiftwidth=4
'''
on_ft = ['python']

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
  " 成功時にバッファ、失敗時にQuickFixで表示
  " 結果表示のサイズ調整など
  let g:quickrun_config = {
      \ '_' : {
      "    \ 'runner' : 'vimproc',
      "    \ 'runner/vimproc/updatetime' : 40,
          \ 'outputter' : 'error',
          \ 'outputter/error/success' : 'buffer',
          \ 'outputter/error/error'   : 'quickfix',
          \ 'outputter/buffer/split' : ':botright 8sp',
      \ }
  \}

  " 実行時に前回の表示内容をクローズ&保存してから実行
  let g:quickrun_no_default_key_mappings = 1
  nmap <Leader>r :cclose<CR>:write<CR>:QuickRun -mode n<CR>
'''
